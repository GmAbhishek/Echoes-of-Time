{"ast":null,"code":"import{Grid}from\"@mui/material\";import AlbumCard from\"./AlbumCard\";import{Fragment}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function AlbumGrid(_ref){var albums=_ref.albums,openFormHandler=_ref.openFormHandler,onChangeAlbumToDeleteHandler=_ref.onChangeAlbumToDeleteHandler;return/*#__PURE__*/_jsx(Fragment,{children:albums.map(function(album){return/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(AlbumCard,{album:album,openFormHandler:openFormHandler,onChangeAlbumToDeleteHandler:onChangeAlbumToDeleteHandler})},album.id);})});}","map":{"version":3,"names":["Grid","AlbumCard","Fragment","jsx","_jsx","AlbumGrid","_ref","albums","openFormHandler","onChangeAlbumToDeleteHandler","children","map","album","item","id"],"sources":["/Volumes/Dev Abyss/Project/Echoes Of Time/frontend/src/components/album/AlbumGrid.js"],"sourcesContent":["import { Grid } from \"@mui/material\";\nimport AlbumCard from \"./AlbumCard\";\nimport { Fragment } from \"react\";\n\nexport default function AlbumGrid({ albums, openFormHandler, onChangeAlbumToDeleteHandler }) {\n  return (\n    <Fragment>\n      {albums.map((album) => {\n        return (\n          <Grid key={album.id} item>\n            <AlbumCard\n              album={album}\n              openFormHandler={openFormHandler}\n              onChangeAlbumToDeleteHandler={onChangeAlbumToDeleteHandler}\n            />\n          </Grid>\n        );\n      })}\n    </Fragment>\n  );\n}\n"],"mappings":"AAAA,OAASA,IAAI,KAAQ,eAAe,CACpC,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,OAASC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjC,cAAe,SAAS,CAAAC,SAASA,CAAAC,IAAA,CAA4D,IAAzD,CAAAC,MAAM,CAAAD,IAAA,CAANC,MAAM,CAAEC,eAAe,CAAAF,IAAA,CAAfE,eAAe,CAAEC,4BAA4B,CAAAH,IAAA,CAA5BG,4BAA4B,CACvF,mBACEL,IAAA,CAACF,QAAQ,EAAAQ,QAAA,CACNH,MAAM,CAACI,GAAG,CAAC,SAACC,KAAK,CAAK,CACrB,mBACER,IAAA,CAACJ,IAAI,EAAgBa,IAAI,MAAAH,QAAA,cACvBN,IAAA,CAACH,SAAS,EACRW,KAAK,CAAEA,KAAM,CACbJ,eAAe,CAAEA,eAAgB,CACjCC,4BAA4B,CAAEA,4BAA6B,CAC5D,CAAC,EALOG,KAAK,CAACE,EAMX,CAAC,CAEX,CAAC,CAAC,CACM,CAAC,CAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}